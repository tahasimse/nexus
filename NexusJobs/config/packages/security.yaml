security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/dev
            provider: app_user_provider
            form_login:
                login_path: app_dev_login
                check_path: app_dev_login
                enable_csrf: true
                default_target_path: /dev/dashboard
            logout:
                path: dev_logout
                target: /dev/login
            

        company:
            pattern: ^/company
            provider: app_user_provider
            form_login:
                login_path: app_company_login
                check_path: app_company_login
                enable_csrf: true
                default_target_path: /company/dashboard
            logout:
                path: company_logout
                target: /company/login
           

    access_control:
        # Accès public aux pages de login et register
        - { path: ^/dev/login, roles: PUBLIC_ACCESS }
        - { path: ^/dev/register, roles: PUBLIC_ACCESS }
        - { path: ^/company/login, roles: PUBLIC_ACCESS }
        - { path: ^/company/register, roles: PUBLIC_ACCESS }

        # Bloquer l'accès sans rôle approprié aux autres pages
        - { path: ^/dev, roles: ROLE_DEV }
        - { path: ^/company, roles: ROLE_COMPANY }
when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
